generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model chef {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String?     @db.Uuid
  speciality       String      @db.VarChar(255)
  experience_years Int
  restaurant_id    String?     @db.Uuid
  created_at       DateTime    @default(now()) @db.Timestamp(6)
  updated_at       DateTime    @default(now()) @db.Timestamp(6)
  restaurant       restaurant? @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user?       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model guest {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String?       @db.Uuid
  phone_number String        @db.VarChar(15)
  address      String        @db.VarChar(255)
  city         String        @db.VarChar(255)
  state        String        @db.VarChar(255)
  zip_code     String        @db.VarChar(10)
  created_at   DateTime      @default(now()) @db.Timestamp(6)
  updated_at   DateTime      @default(now()) @db.Timestamp(6)
  user         user?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  reservation  reservation[]
}

model menu {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String      @db.VarChar(255)
  description   String?     @db.VarChar(255)
  price         Int
  restaurant_id String?     @db.Uuid
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  restaurant    restaurant? @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model reservation {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date             DateTime    @db.Date
  time             DateTime    @db.Time(6)
  number_of_people Int
  guest_id         String?     @db.Uuid
  restaurant_id    String?     @db.Uuid
  created_at       DateTime    @default(now()) @db.Timestamp(6)
  updated_at       DateTime    @default(now()) @db.Timestamp(6)
  guest            guest?      @relation(fields: [guest_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  restaurant       restaurant? @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model restaurant {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  address     String?       @db.VarChar(255)
  city        String?       @db.VarChar(255)
  state       String?       @db.VarChar(255)
  zip_code    String?       @db.VarChar(10)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  chef        chef[]
  menu        menu[]
  reservation reservation[]
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  chef        chef[]
  guest       guest[]
  restaurant  restaurant[]
}
